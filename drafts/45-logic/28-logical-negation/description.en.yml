---

name: Negation
theory: |

  Alongside the conjunction (AND) and disjunction (OR) operators, we often use the negation operator, too. It changes the logical value to the opposite one. It's denoted by the unary operator `!` in programming.

  If there's a function that checks for even numbers, then negation will allow you to check for odd numbers:

  ```php
  <?php

  function isEven($number)
  {
      return $number % 2 === 0;
  }

  isEven(10);  // true
  !isEven(10); // false
  ```

  I.e., we can just put a `!` to the left of the function call and get the opposite result. Negation is a powerful tool that allows you to concisely express the desired rules in your code without having to write new functions.

  What if you write it like this `!!isEven(10)`? Suddenly, the code will work. Double negation in logic is equivalent to no negation at all.

  ```php
  <?php

  isEven(10);   // true
  !isEven(10);  // false
  !!isEven(10); // true
  ```

instructions: |
  
  In this lesson, you'll need to implement the two functions `isPalindrome()` and `isNotPalindrome()`

  1. The `isPalindrome()` function determines whether a word is a palindrome or not. A palindrome is a word that reads the same backwards as it does forwards.

      ```php
      <?php

      isPalindrome('wow'); // true
      isPalindrome('mom'); // true
      isPalindrome('hexlet'); // false

      // You can pass upper and lower-case letters to the function
      // Therefore, you must first convert the word to lowercase strtolower()
      isPalindrome('Wow'); // true
      ```

      To flip a word, use the `strrev()` function.

  2. The `isNotPalindrome()` function checks that the word is NOT a palindrome:

      ```php
      <?php

      isNotPalindrome('wow'); // false
      isNotPalindrome('mom'); // false
      isNotPalindrome('hexlet'); // true
      ```

      All you need is to negate the `isPalindrome()` function call within the `isNotPalindrome()` function's body.

tips:
  - |
    [De Morgan's Laws](https://en.wikipedia.org/wiki/De_Morgan%27s_laws)
