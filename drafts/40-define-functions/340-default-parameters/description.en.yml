---

name: Optional Function Parameters
theory: |

  In programming, many functions and methods have parameters that rarely change. In such cases, these parameters are given default values that can be changed as needed. This reduces the number of duplicated code. An example:

  ```php
  <?php

  // Exponentiation function.
  // The second parameter is 2 by default
  function myPow($x, $base = 2)
  {
      return $x ** $base;
  }

  // 3 to the power of 2 (2 is the default setting)
  myPow(3); // 3 * 3 = 9
  // 3 to the power of 3
  myPow(3, 3); // 3 * 3 * 3 = 27
  ```

  The default value looks like a normal assignment within the definition. It only works if the parameter isn't passed. This is something you should get used to. There can even be a default value when there's only one parameter:

  ```php
  <?php

  function myPrint($text = 'nothing')
  {
      print_r($text);
  }

  myPrint(); // => "nothing"
  myPrint("Hexlet"); // => "Hexlet"
  ```

  There can be any number of default parameters:

  ```php
  <?php

  function f($a = 5, $b = 10, $c = 100)
  {
    ...
  }
  ```

  Default values have one limitation. They need to be at the very end of the parameter list. From a syntax perspective, it's impossible to create a function that will have a mandatory parameter after an optional one:

  ```php
  <?php

  // This code will terminate with an error
  function f($a = 5, $b = 10, $c = 100, $x)
  {
    ...
  }

  // This too
  function f($a = 5, $b = 10, $x, $c = 100)
  {
    ...
  }

  // But this one will work.
  function f($x, $a = 5, $b = 10, $c = 100)
  {
    ...
  }

  // This too
  function f($x, $y, $a = 5, $b = 10, $c = 100)
  {
    ...
  }
  ```

instructions: |

  Write a function, `getHiddenCard()`, which takes a credit card number (consisting of 16 digits) as a string and returns a hidden version of it, which can be displayed on the website. If the original card had the number *2034399002125581*,  the hidden version will look like this: *\*\*\*\*5581*. In other words, the function replaces the first 12 digits with asterisks. The number of asterisks is specified by a second optional parameter.  The default value is 4.

  ```php
  <?php

  // The credit card number is passed as a string
  getHiddenCard("1234567812345678", 2); // "**5678"
  getHiddenCard("1234567812345678", 3); // "***5678"
  getHiddenCard('1234567812345678'); // "****5678"
  getHiddenCard('2034399002121100', 1); // "*1100"
  ```

  To do this task, you need the [str_repeat()](https://www.php.net/manual/en/function.str-repeat.php), function, which repeats the string a specified number of times

  ```php
  <?php

  str_repeat('+', 5); // "+++++"
  str_repeat('o', 3); // "ooo"
  ```
