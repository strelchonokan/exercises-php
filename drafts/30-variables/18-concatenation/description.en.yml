---

name: Variables and concatenation
theory: |

  Let's try concatenating variables so that we can reinforce the previous topic a little. The syntax is still the same, we know how to concatenate (combine) two strings:

  ```php
  <?php

  $what = "Kings" . "road";
  print_r($what); // => "Kingsroad"
  ```

  … which means we can concatenate the string and the variable that the string has been written to:

  ```php
  <?php

  $first = "Kings";
  $what = $first . "road";

  print_r($what); // => "Kingsroad"
  ```

  … and even concatenate two variables with strings in them:

  ```php
  <?php

  $first = "Kings";
  $last = 'road';

  $what = $first . $last;
  print_r($what); // => "Kingsroad"
  ```

instructions: |

  Websites are constantly sending emails to their users. One common task is to automatically send a personalized email with the user's name in the header. If you store a person's name as a string somewhere in a website database, the task of generating the header boils down to concatenation. For instance, you have to concatenate the string `Hello` with a string containing their name.

  Write a program that'll create a header and a body of the email using ready-made variables and print the resulting strings.

  For the header, use the `$firstName` and `$greeting` variables for the, and a comma and exclamation point. Print it in the correct order.

  Use the variables `$info` and `$intro` for the body of the email, with the second sentence on a new line.

  The result should look like this:

  <pre class='hexlet-basics-output'>
  Hello, Joffrey!
  Here is important information about your account security.
  We couldn't verify you mother's maiden name.
  </pre>

  Try and do it using just two `print_r()` statements.

tips:
  - |
    Consider how you should concatenate the variables (Which string? What order?) to get the two-line output of the email body.
  - |
    Remember that you can create a string containing only the escape sequence `\n`.
